//This file was automatically generated by the genval generator
//Please don't modify it manually. Edit your entity tags and then
//run go generate

package simple

import (
	"fmt"

	"unicode/utf8"
)

type Validatable interface {
	Validate() error
}

func callValidateIfValidatable(i interface{}) error {
	if v, ok := i.(Validatable); ok {
		if err := v.Validate(); err != nil {
			return err
		}
	}
	return nil
}

func (r Dog) validate() error {
	if utf8.RuneCountInString(r.Name) < 1 {
		return fmt.Errorf("field Name is less than 1 ")
	}
	if utf8.RuneCountInString(r.Name) > 64 {
		return fmt.Errorf("field Name is more than 64 ")
	}
	return nil
}

func (r Dog) Validate() error {
	return r.validate()
}

func (r User) validate() error {
	if utf8.RuneCountInString(r.Name) < 3 {
		return fmt.Errorf("field Name is less than 3 ")
	}
	if utf8.RuneCountInString(r.Name) > 64 {
		return fmt.Errorf("field Name is more than 64 ")
	}
	if r.Age < 18 {
		return fmt.Errorf("field Age is less than 18 ")
	}
	if r.Age > 95 {
		return fmt.Errorf("field Age is more than 95 ")
	}
	if err := callValidateIfValidatable(r.Dog); err != nil {
		return err
	}
	if len(r.Emails) < 1 {
		return fmt.Errorf("map Emails has less items than 1 ")
	}
	for k, v := range r.Emails {
		_ = k
		_ = v
		if k > 3 {
			return fmt.Errorf("field k is more than 3 ")
		}
		if utf8.RuneCountInString(v) < 5 {
			return fmt.Errorf("field v is less than 5 ")
		}
	}
	return nil
}

func (r User) Validate() error {
	return r.validate()
}
